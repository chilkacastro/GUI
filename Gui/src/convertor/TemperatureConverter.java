/*
 * The MIT License
 *
 * Copyright 2021 Chilka Castro.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package convertor;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;

/**
 * A Temperature Converter Class
 * @author Chilka Castro
 */
public class TemperatureConverter extends javax.swing.JFrame {
    private Menu menu;
    
    /**
     * Constructor with menu data member
     * @param menu the input menu object
     */
    public TemperatureConverter(Menu menu) {
        initComponents();
        this.menu = menu;
        ImageIcon titleImg = new ImageIcon("imgs\\thermometer.png");  
        imgL.setIcon(titleImg);
        msgL.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modeBG = new javax.swing.ButtonGroup();
        titleL = new javax.swing.JLabel();
        equalL = new javax.swing.JLabel();
        inputUnitL = new javax.swing.JLabel();
        outputUnitL = new javax.swing.JLabel();
        inputTF = new javax.swing.JTextField();
        outputTF = new javax.swing.JLabel();
        submitL = new javax.swing.JButton();
        c2FB = new javax.swing.JRadioButton();
        f2CB = new javax.swing.JRadioButton();
        inputSL = new javax.swing.JSlider();
        msgL = new javax.swing.JLabel();
        imgL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Temperature Converter");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        titleL.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 32)); // NOI18N
        titleL.setForeground(new java.awt.Color(101, 70, 39));
        titleL.setText("Temperature Converter");

        equalL.setForeground(new java.awt.Color(101, 70, 39));
        equalL.setText("=");

        inputUnitL.setText("°C");

        outputUnitL.setText("°F");

        inputTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputTFKeyReleased(evt);
            }
        });

        outputTF.setForeground(new java.awt.Color(101, 70, 39));

        submitL.setText("Submit");
        submitL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitLActionPerformed(evt);
            }
        });

        modeBG.add(c2FB);
        c2FB.setSelected(true);
        c2FB.setText("°C to °F");
        c2FB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2FBActionPerformed(evt);
            }
        });

        modeBG.add(f2CB);
        f2CB.setText("°F to °C ");
        f2CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f2CBActionPerformed(evt);
            }
        });

        inputSL.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        inputSL.setMajorTickSpacing(10);
        inputSL.setMinimum(-40);
        inputSL.setMinorTickSpacing(5);
        inputSL.setOrientation(javax.swing.JSlider.VERTICAL);
        inputSL.setPaintLabels(true);
        inputSL.setPaintTicks(true);
        inputSL.setValue(0);
        inputSL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inputSLStateChanged(evt);
            }
        });

        msgL.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        msgL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        msgL.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleL)
                        .addGap(12, 12, 12)
                        .addComponent(imgL, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(msgL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(inputTF, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(inputUnitL)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(equalL, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(outputTF, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(outputUnitL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(c2FB)
                                            .addComponent(f2CB))
                                        .addGap(55, 55, 55)))
                                .addGap(30, 30, 30)))
                        .addGap(18, 18, 18)
                        .addComponent(inputSL, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(submitL)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleL)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(inputUnitL)
                                        .addComponent(outputUnitL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(equalL)
                                        .addComponent(inputTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(outputTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addComponent(c2FB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f2CB)
                                .addGap(36, 36, 36)
                                .addComponent(msgL, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(submitL)
                                    .addComponent(inputSL, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imgL, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Sets input unit to Celsius and output unit to Fahrenheit
     * @param evt the event action
     */
    private void c2FBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2FBActionPerformed
        inputUnitL.setText("°C");
        outputUnitL.setText("°F");
        outputTF.setFocusable(false);
        msgL.setVisible(false);
        cleanTextField();
    }//GEN-LAST:event_c2FBActionPerformed

    /**
     * Sets input unit to Fahrenheit and output unit to Celsius
     * @param evt the event action
     */
    private void f2CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f2CBActionPerformed
        inputUnitL.setText("°F");
        outputUnitL.setText("°C");
        outputTF.setFocusable(false);
        msgL.setVisible(false);
        cleanTextField();
    }//GEN-LAST:event_f2CBActionPerformed

    /**
     * Clean text fields
     */
    public void cleanTextField() {
        inputTF.setText("");
        outputTF.setText("");
    }

    /**
     * Handles the submit event, do the conversion
     * @param evt the event action
     */
    private void submitLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitLActionPerformed
        msgL.setVisible(true);
        msgL.setBackground(Color.BLACK);
        msgL.setForeground(Color.BLUE);
        convertTemp();
    }//GEN-LAST:event_submitLActionPerformed
    
    /**
     * Converts temperature
     */
    public void convertTemp() {
        try {
            // read from text field
            double input = Double.parseDouble(inputTF.getText());
        
            // Celcius to Fahrenheit
            if (c2FB.isSelected()) {
                outputTF.setText(String.format("%.1f", celsiusToFahrenheit(input)));
                msgL.setText(String.format("%.1f °C is equal to %.1f °F", 
                        input, celsiusToFahrenheit(input)));
                msgL.setVisible(true);
            }
            
            // Fahreneit to Celcius
            else {
                outputTF.setText(String.format("%.1f", fahrenheitToCelsius(input)));
                msgL.setText(String.format("%.1f °C is equal to %.1f °F", 
                        input, fahrenheitToCelsius(input)));
                msgL.setVisible(true);
            }
        
        } catch (NumberFormatException e) {
            msgL.setVisible(true);
            msgL.setForeground(Color.RED);
            msgL.setBackground(Color.RED);
            msgL.setText("The input value is incorrect. Please try again.");
        }
    }
    
    /**
     * Converts Celsius to Fahrenheit
     * @param input the input Celsius
     * @return the converted Fahrenheit
     */
    public double celsiusToFahrenheit(double input) {
        final double cToFRatio = 1.8; 
        final int shiftTemp = 32;
        return input * cToFRatio + shiftTemp;
    }
       
    /**
     * Converts Fahrenheit to Celsius 
     * @param input the input Fahrenheit 
     * @return the converted Celsius
     */
    public double fahrenheitToCelsius(double input) {
        final double fToCRatio = 1.8; 
        final int shiftTemp = 32;
        return (input - shiftTemp) / fToCRatio;
    }
    
    /**
     * Sets the menu frame visible again once the length converter window is closed
     * @param evt the event action
     */
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        menu.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * Updates the input text field when the slider value gets changed
     * @param evt the event action
     */
    private void inputSLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inputSLStateChanged
        inputTF.setText(inputSL.getValue() + "");
    }//GEN-LAST:event_inputSLStateChanged
    
    /**
     * Converts the values with enter key
     * @param evt the event action
     */
    private void inputTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTFKeyReleased
        msgL.setVisible(false);
        msgL.setBackground(Color.BLACK);
        msgL.setForeground(Color.BLUE);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            convertTemp();
    }//GEN-LAST:event_inputTFKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton c2FB;
    private javax.swing.JLabel equalL;
    private javax.swing.JRadioButton f2CB;
    private javax.swing.JLabel imgL;
    private javax.swing.JSlider inputSL;
    private javax.swing.JTextField inputTF;
    private javax.swing.JLabel inputUnitL;
    private javax.swing.ButtonGroup modeBG;
    private javax.swing.JLabel msgL;
    private javax.swing.JLabel outputTF;
    private javax.swing.JLabel outputUnitL;
    private javax.swing.JButton submitL;
    private javax.swing.JLabel titleL;
    // End of variables declaration//GEN-END:variables
}
